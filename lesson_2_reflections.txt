when I initiallize a repository, git createsa hidden folder in it, called  '.git' . This folder tracks the status of the files in it. It does not createany commits.
I need to do it if I want to track my changes of a folder who hasn't been tracked yet, with a source control.

How is the staging area different from the working directory and the repository? 
it's different because it's only logical - nothing has been committed yet.
What value do you think it offers?
reviewing what I intend to commit, making sure it makes sense, giving me a second thought

How can you use the staging area to make sure you have one commit per logical change?
look it thorough using git status before git commit

What are some situations when branches would be helpful in keeping your history organized? 
in case we want to create multilple versions, a bug fix, an experiment, but still have a working version at the same time
How would branches help?
branches would help since they allow me to try whatever I want in a copy, and track that as well.

How do the diagrams help you visualize the branch structure?
the diagrams help visualize the branch structure by mentioning easily the parents commits

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
the result is having all the commits from the 2 branches exist on one version, holding 2 parents, and all the reachable commits on the way.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
prons - it's quick and can be done without knowing the exact changes that were made.
cons - it may have mistakes, I may not be aware of some change that was introduced and caused some undesired behaviour for me.